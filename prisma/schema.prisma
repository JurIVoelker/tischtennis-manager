// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "sqlite"
  url      = "file:./database.db"
}

model Club {
  id     String  @id @default(cuid())
  slug   String  @unique
  name   String  @unique
  teams  Team[]
  owners Owner[]
}

model Owner {
  id     String @id @default(cuid())
  email  String @unique
  clubId String
  club   Club   @relation(fields: [clubId], references: [id])
}

model Team {
  id           String         @id @default(cuid())
  slug         String         @unique
  clubId       String
  name         String
  club         Club           @relation(fields: [clubId], references: [id])
  players      Player[]
  matches      Match[]
  teamAuth     TeamAuth?
  teamLeader   TeamLeader[]
  teamPosition TeamPosition[]
}

model TeamPosition {
  id       String @id @unique @default(cuid())
  teamId   String
  position Int
  playerId String
  team     Team   @relation(fields: [teamId], references: [id])
  Player   Player @relation(fields: [playerId], references: [id])
}

model TeamAuth {
  createdAt DateTime @default(now())
  id        String   @id @default(cuid())
  teamId    String   @unique
  token     String   @default(cuid())
  team      Team     @relation(fields: [teamId], references: [id])
}

model TeamLeader {
  id     String @id @default(cuid())
  teamId String
  email  String
  team   Team   @relation(fields: [teamId], references: [id])
}

model Player {
  id           String         @id @default(cuid())
  teamId       String
  firstName    String
  lastName     String
  team         Team           @relation(fields: [teamId], references: [id])
  lineups      Lineup[]
  teamPosition TeamPosition[]
}

model Match {
  id            String    @id @default(cuid())
  teamId        String
  matchDateTime DateTime
  team          Team      @relation(fields: [teamId], references: [id])
  enemyClubName String
  isHomeGame    Boolean
  location      Location?
  lineups       Lineup[]
}

model Location {
  id            String @id @default(cuid())
  matchId       String @unique
  hallName      String
  streetAddress String
  city          String
  match         Match  @relation(fields: [matchId], references: [id])
}

model Lineup {
  id       String @id @default(cuid())
  matchId  String
  playerId String
  position Int
  match    Match  @relation(fields: [matchId], references: [id])
  player   Player @relation(fields: [playerId], references: [id])
}
